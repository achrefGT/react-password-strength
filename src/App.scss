/** Declare some variables **/
$primary: #121d93;

// Password strength meter color for the different levels
$strength-colors: (darkred, orangered, orange, yellowgreen, green);

// Gap width between strength meter bars
$strength-gap: 6px;

body {
  font-size: 62.5%;
  background-image: url('../public/back.jpeg'); /* Replace with your image file */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  height: 150vh;
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

.main-container {
  width: 400px;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.form-container {
  bottom: 100px;
  background-color: rgba(255, 255, 255, 0.8); /* Add a semi-transparent white background to the form container */
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin-top: 20px;
}

legend.form-label {
  font-size: 1.5rem;
  color: desaturate(darken($primary, 10%), 60%);
}

.control-label {
  font-size: 1rem;
  font-weight: bold;
  margin-bottom: 5px;
  color: desaturate(darken($primary, 10%), 100%);
  font-family: 'Open Sans';

}

.form-control {
  font-size: 0.8rem;
  
}

.form-hint {
  font-size: 0.7rem;
  line-height: 1.4;
  color: #999;

  &.error {
    color: #C00;
    font-size: 0.8rem;
  }
}

button.btn {
  letter-spacing: 0.9px;
  font-size: 1.2rem;
  font-weight: 600;
  width: 350px;
  font-family: 'Open Sans';
}

.password-count {
  bottom: 16px;
  right: 10px;
  font-size: 1rem;
}

.strength-meter {
  position: relative;
  height: 3px;
  width: 90%;
  background: #DDD;
  margin: 7px auto; /* Center the meter by setting margin: auto */
  border-radius: 2px;

  // Dynamically create the gap effect
  &:before,
  &:after {
    content: '';
    height: inherit;
    background: transparent;
    display: block;
    border-color: #FFF;
    border-style: solid;
    border-width: 0 $strength-gap 0;
    position: absolute;
    width: calc(20% + #{$strength-gap});
    z-index: 10;
  }

  // Dynamically create the gap effect
  &:before {
    left: calc(20% - #{($strength-gap / 2)});
  }

  // Dynamically create the gap effect
  &:after {
    right: calc(20% - #{($strength-gap / 2)});
  }
}


.strength-meter-fill {
  background: transparent;
  height: inherit;
  position: absolute;
  width: 0;
  border-radius: inherit;
  transition: width 0.5s ease-in-out, background 0.25s;

  // Dynamically generate strength meter color styles
  @for $i from 1 through 5 {
    &[data-strength='#{$i - 1}'] {
      width: (20% * $i);
      background: nth($strength-colors, $i);
    }
  }
}





